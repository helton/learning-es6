{"version":3,"sources":["../src/index.es6"],"names":["constDeclarations","babelTests","modulesImportExport","objectEnhancements","spreadOperator","shorthandProperties","generatorBasics","stringTemplates","destructuringAssignment","defaultParameters","arrowFunctions","letKeyword","modules","name","value","forEach","index","moduleName","module","sep","repeat","console","log","startCase","run"],"mappings":";;AAAA;;;;AACA;;IAAYA,iB;;AACZ;;IAAYC,U;;AACZ;;IAAYC,mB;;AACZ;;IAAYC,kB;;AACZ;;IAAYC,c;;AACZ;;IAAYC,mB;;AACZ;;IAAYC,e;;AACZ;;IAAYC,e;;AACZ;;IAAYC,uB;;AACZ;;IAAYC,iB;;AACZ;;IAAYC,c;;AACZ;;IAAYC,U;;;;;;AAEZ,IAAIC,UAAU,CACZ,EAAEC,MAAM,oBAAR,EAA8BC,OAAOd,iBAArC,EADY,EAEZ,EAAEa,MAAM,aAAR,EAAuBC,OAAOb,UAA9B,EAFY,EAGZ,EAAEY,MAAM,uBAAR,EAAiCC,OAAOZ,mBAAxC,EAHY,EAIZ,EAAEW,MAAM,qBAAR,EAA+BC,OAAOX,kBAAtC,EAJY,EAKZ,EAAEU,MAAM,iBAAR,EAA2BC,OAAOV,cAAlC,EALY,EAMZ,EAAES,MAAM,sBAAR,EAAgCC,OAAOT,mBAAvC,EANY,EAOZ,EAAEQ,MAAM,kBAAR,EAA4BC,OAAOR,eAAnC,EAPY,EAQZ,EAAEO,MAAM,kBAAR,EAA4BC,OAAOP,eAAnC,EARY,EASZ,EAAEM,MAAM,0BAAR,EAAoCC,OAAON,uBAA3C,EATY,EAUZ,EAAEK,MAAM,oBAAR,EAA8BC,OAAOL,iBAArC,EAVY,EAWZ,EAAEI,MAAM,iBAAR,EAA2BC,OAAOJ,cAAlC,EAXY,EAYZ,EAAEG,MAAM,aAAR,EAAuBC,OAAOH,UAA9B,EAZY,CAAd;;AAeAC,QAAQG,OAAR,CAAgB,gBAAoCC,KAApC,EAA8C;AAAA,MAAtCC,UAAsC,QAA5CJ,IAA4C;AAAA,MAAnBK,MAAmB,QAA1BJ,KAA0B;;AAC5D,MAAIK,MAAM,IAAIC,MAAJ,CAAW,EAAX,CAAV;AACAC,UAAQC,GAAR,QAAiBH,GAAjB;AACAE,UAAQC,GAAR,CAAeN,QAAQ,CAAvB,UAA6B,iBAAEO,SAAF,CAAYN,UAAZ,CAA7B;AACAI,UAAQC,GAAR,CAAYH,GAAZ;AACAD,SAAOM,GAAP;AACD,CAND;;AAQA","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport * as constDeclarations from './const-declarations';\nimport * as babelTests from './babel-tests';\nimport * as modulesImportExport from './modules-import-export';\nimport * as objectEnhancements from './object-enhancements';\nimport * as spreadOperator from './spread-operator';\nimport * as shorthandProperties from './shorthand-properties'\nimport * as generatorBasics from './generator-basics';\nimport * as stringTemplates from './string-templates';\nimport * as destructuringAssignment from './destructuring-assignment';\nimport * as defaultParameters from './default-parameters';\nimport * as arrowFunctions from './arrow-functions';\nimport * as letKeyword from './let-keyword';\n\nlet modules = [\n  { name: 'const declarations', value: constDeclarations },\n  { name: 'babel tests', value: babelTests },\n  { name: 'modules import export', value: modulesImportExport },\n  { name: 'object enhancements', value: objectEnhancements },\n  { name: 'spread operator', value: spreadOperator },\n  { name: 'shorthand properties', value: shorthandProperties },\n  { name: 'generator basics', value: generatorBasics },\n  { name: 'string templates', value: stringTemplates },\n  { name: 'destructuring assignment', value: destructuringAssignment },\n  { name: 'default parameters', value: defaultParameters },\n  { name: 'arrow functions', value: arrowFunctions },\n  { name: 'let keyword', value: letKeyword }\n];\n\nmodules.forEach(({name: moduleName, value: module}, index) => {\n  let sep = '='.repeat(30);\n  console.log(`\\n${sep}`);\n  console.log(`${index + 1}) ${_.startCase(moduleName)}`);\n  console.log(sep);\n  module.run();\n});\n\n/*\n// Why is it not working? Is it a Babel issue?\nfor ({name: moduleName, value: module} of modules) {\n  let sep = _.repeat('=', 30);\n  console.log(`\\n${sep}`);\n  console.log(`${_.startCase(moduleName)}`);\n  console.log(sep);\n  module.run();\n}\n*/\n"]}