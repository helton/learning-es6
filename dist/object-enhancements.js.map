{"version":3,"sources":["../src/object-enhancements.es6"],"names":["exports","run","color","speed","go","console","log","drive","car","goAgain","goAnotherTime"],"mappings":";;;;AAAA;;;;AAIAA,QAAQC,GAAR,GAAc,YAAM;AAClB,MAAIC,QAAQ,KAAZ;AACA,MAAIC,QAAQ,EAAZ;AACA,MAAIC,KAAK,SAALA,EAAK;AAAA,WAAMC,QAAQC,GAAR,CAAY,UAAZ,CAAN;AAAA,GAAT;AACA,MAAIC,QAAQ,eAAZ;;AAEA,MAAIC;AACFN,gBADE;AAEFC,gBAFE;AAGFC,UAHE;AAIFK,WAJE,qBAIQ;AACRJ,cAAQC,GAAR,CAAY,gBAAZ;AACD;AANC,KAODC,KAPC,EAOO,YAAY;AACnBF,YAAQC,GAAR,CAAY,6BAAZ;AACD,GATC,CAAJ;AAWAD,UAAQC,GAAR,CAAYE,IAAIN,KAAhB;AACAG,UAAQC,GAAR,CAAYE,IAAIL,KAAhB;AACAK,MAAIJ,EAAJ;AACAI,MAAIC,OAAJ;AACAD,MAAIE,aAAJ;AACD,CAtBD","file":"object-enhancements.js","sourcesContent":["/*\r\n   ES6 allows us to omit property names if their name matches the variable names\r\n   We can also use syntax functionName() {} inside the object literal\r\n*/\r\nexports.run = () => {\r\n  let color = 'red';\r\n  let speed = 10;\r\n  let go = () => console.log('vroom...');\r\n  let drive = \"goAnotherTime\";\r\n\r\n  let car = {\r\n    color,\r\n    speed,\r\n    go,\r\n    goAgain() {\r\n      console.log('vroom again...');\r\n    },\r\n    [drive]: function () {\r\n      console.log('vroooooooom another time...');\r\n    }\r\n  };\r\n  console.log(car.color);\r\n  console.log(car.speed);\r\n  car.go();\r\n  car.goAgain();\r\n  car.goAnotherTime();\r\n};\r\n"]}